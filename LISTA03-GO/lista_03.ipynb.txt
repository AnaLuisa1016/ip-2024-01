{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "00OuwHDMCG_M"
      },
      "outputs": [],
      "source": [
        "\\\\Questão 01\n",
        "package main\n",
        "\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    var tmn, busca int\n",
        "    fmt.Print(\"Indique o tamanho do vetor: \")\n",
        "    fmt.Scanln(&tmn)\n",
        "\n",
        "    Vetor := make([]int, tmn)\n",
        "    for i := 0; i < tmn; i++ {\n",
        "        fmt.Scan(&Vetor[i])\n",
        "    }\n",
        "    fmt.Print(\"indique a quantidade de buscas: \")\n",
        "    fmt.Scanln(&busca)\n",
        "\n",
        "    for i := 0; i < busca; i++ {\n",
        "        var nmr int\n",
        "        fmt.Print(\"Indique os números à serem buscados: \")\n",
        "        fmt.Scanln(&nmr)\n",
        "\n",
        "        enct := false\n",
        "        for j := 0; j < tmn; j++ {\n",
        "            if Vetor[j] == nmr {\n",
        "                enct = true\n",
        "                break\n",
        "            }\n",
        "        }\n",
        "\n",
        "        if enct {\n",
        "            fmt.Println(\"ACHEI\")\n",
        "        } else {\n",
        "            fmt.Println(\"NAO ACHEI\")\n",
        "        }\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 02\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    var N, K int\n",
        "    fmt.Print(\"Indique o tamanho do vetor: \")\n",
        "    fmt.Scan(&N)\n",
        "\n",
        "    if N < 1 || N >1000 {\n",
        "        fmt.Print(\"Número Inválido\")\n",
        "        fmt.Print(\"Digite outro número\")\n",
        "        fmt.Scan(&N)\n",
        "    }\n",
        "\n",
        "    V:= make([]int, N)\n",
        "    for i := 0; i < N; i++ {\n",
        "        fmt.Scan(&V[i])\n",
        "    }\n",
        "    fmt.Println(\"Escreva um número\")\n",
        "    fmt.Scan(&K)\n",
        "\n",
        "   vetor := 0\n",
        "    for i := 0; i < len(V); i++ {\n",
        "    if V[i] >= K {\n",
        "        vetor++\n",
        "    }\n",
        "}\n",
        "\n",
        "    fmt.Println(vetor)\n",
        "}"
      ],
      "metadata": {
        "id": "oS-XbBGjH1_m"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 03\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    var n int\n",
        "    fmt.Print(\"Indique o tamanho do vetor: \")\n",
        "    fmt.Scan(&n)\n",
        "\n",
        "    Vetor:= make([]int, n)\n",
        "    for i := 0; i < n; i++ {\n",
        "        fmt.Scan(&Vetor[i])\n",
        "    }\n",
        "    for i := n-1; i >=0; i-- {\n",
        "        fmt.Println(Vetor[i])\n",
        "    }\n",
        "}"
      ],
      "metadata": {
        "id": "rMWI55oORS95"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 04\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    var n int\n",
        "    fmt.Scan(&n)\n",
        "    if n >5000 {\n",
        "       fmt.Println(\"Número Inválido. Digite outro número\")\n",
        "       fmt.Scan(&n)\n",
        "    }\n",
        "\n",
        "       Vetor:= make([]int, n)\n",
        "    for i := 0; i < n; i++ {\n",
        "        fmt.Scan(&Vetor[i])\n",
        "        fmt.Println(Vetor[i])\n",
        "    }\n",
        "}"
      ],
      "metadata": {
        "id": "BUoq1IZZTpo0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\ Questão 05\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    for {\n",
        "        var n int\n",
        "        fmt.Scan(&n)\n",
        "        if n < 0 || n > 10000 {\n",
        "       fmt.Println(\"Número Inválido. Digite outro número\")\n",
        "       fmt.Scan(&n)\n",
        "        }\n",
        "        if n == 0 {\n",
        "                break\n",
        "            }\n",
        "       Vetor:= make([]int, n)\n",
        "       maior := 0\n",
        "\t   posicao := 0\n",
        "        for i := 0; i < n; i++ {\n",
        "            fmt.Scan(&Vetor[i])\n",
        "\t        if Vetor[i] > maior {\n",
        "\t\t\t\tmaior = Vetor[i]\n",
        "\t\t\t\tposicao = i\n",
        "\t        }\n",
        "        }\n",
        "    fmt.Println(maior, posicao)\n",
        "    }\n",
        "}"
      ],
      "metadata": {
        "id": "UV1wqguGdgAl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 06\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "        var n, soma int\n",
        "        fmt.Scan(&n)\n",
        "        if n > 5000 {\n",
        "       fmt.Println(\"Número Inválido. Digite outro número\")\n",
        "       fmt.Scan(&n)\n",
        "        }\n",
        "       Vetor := make([]int, n)\n",
        "        for i := 0; i < n; i++ {\n",
        "            fmt.Scan(&Vetor[i])\n",
        "\t        soma += Vetor[i]\n",
        "        }\n",
        "        fmt.Println(soma)\n",
        "}"
      ],
      "metadata": {
        "id": "TmamPyhC2Er0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 07"
      ],
      "metadata": {
        "id": "krOMME4T4D6o"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 08\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "   var Q, N int\n",
        "   fmt.Scan(&Q)\n",
        "    for i :=0; i<=Q; i++ {\n",
        "        fmt.Scan(&N)\n",
        "        fmt.Printf(\"%b\",N)\n",
        "    }\n",
        "\n",
        "}"
      ],
      "metadata": {
        "id": "yBYpuLRS4Hce"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 09\n",
        "package main\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "   var P, x, xb, y, yb, z, zb int\n",
        "   var ponto float32\n",
        "   fmt.Scan (&P)\n",
        "   for i := 0; i <= P; i++ {\n",
        "       fmt.Scanln(&x, &y, &z)\n",
        "       fmt.Scanln(&xb, &yb, &zb)\n",
        "       ponto = math.Sqrt (math.Pow((x-xb),2.0) + math.Pow((y-yb),2.0) + math.Pow((z-zb),2.0))\n",
        "       fmt.Println(\"\",ponto)\n",
        "   }\n",
        "\n",
        "}\n"
      ],
      "metadata": {
        "id": "SEMSjkEL86ms"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 10\n",
        "package main\n",
        "\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    var N, unota, mnota, pnota, fnota int\n",
        "    fmt.Scanln(&N)\n",
        "\n",
        "    vetor := make([]int, N)\n",
        "    for i := 0; i < N; i++ {\n",
        "        fmt.Scanln(&vetor[i])\n",
        "\n",
        "        if i == N-1 {\n",
        "            unota = vetor[i]\n",
        "            fnota++\n",
        "        }\n",
        "\n",
        "        if vetor[i] > mnota {\n",
        "            mnota = vetor[i]\n",
        "            pnota = i\n",
        "        }\n",
        "    }\n",
        "    for i := 0; i < N-1; i++ {\n",
        "        if vetor[i] == unota {\n",
        "            fnota++\n",
        "        }\n",
        "    }\n",
        "\n",
        "    fmt.Println(\"Nota\",unota, \"\",fnota, \"vezes\")\n",
        "    fmt.Println(\"Nota\", mnota, \"índice\", pnota)\n",
        "}\n"
      ],
      "metadata": {
        "id": "sUf7Ev_GBO13"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 11\n",
        "package main\n",
        "\n",
        "import \"fmt\"\n",
        "\n",
        "func main() {\n",
        "    var N int\n",
        "    fmt.Scanln(&N)\n",
        "    if N > 1000 || N < 1 {\n",
        "       fmt.Println(\"Número Inválido. Digite outro número\")\n",
        "       fmt.Scan(&N)\n",
        "    }\n",
        "\n",
        "    V := make([]int, N)\n",
        "    for i := 0; i < N; i++ {\n",
        "\t\tfmt.Scan(&V[i])\n",
        "\t}\n",
        "\tfor i := 0; i < N; i++ {\n",
        "\t\tfmt.Printf(\"%d\", V[i])\n",
        "\t\tif i < N-1 {\n",
        "\t\t\tfmt.Printf(\" \")\n",
        "\t\t}\n",
        "\t}\n",
        "\tfmt.Println()\n",
        "\tmaxV := V[0]\n",
        "\tfor i := 1; i < N; i++ {\n",
        "\t\tif V[i] > maxV {\n",
        "\t\t\tmaxV = V[i]\n",
        "\t\t}\n",
        "\t}\n",
        "\tfmt.Println(maxV)\n",
        "\n",
        "\tW := make([]int, N)\n",
        "\tfor i := 0; i < N; i++ {\n",
        "\t\tW[N-i-1] = V[i]\n",
        "\t}\n",
        "\tfor i := 0; i < N; i++ {\n",
        "\t\tfmt.Printf(\"%d\", W[i])\n",
        "\t\tif i < N-1 {\n",
        "\t\t\tfmt.Printf(\" \")\n",
        "\t\t}\n",
        "\t}\n",
        "\tfmt.Println()\n",
        "\tminW := W[0]\n",
        "\tfor i := 1; i < N; i++ {\n",
        "\t\tif W[i] < minW {\n",
        "\t\t\tminW = W[i]\n",
        "\t\t}\n",
        "\t}\n",
        "\tfmt.Println(minW)\n",
        "}"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 106
        },
        "id": "6EWNiq_RZYwL",
        "outputId": "e4e09eb8-587b-48ae-b6ba-83494a9b5b5a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "unexpected character after line continuation character (<ipython-input-1-6ff3dfbb8dc3>, line 1)",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-6ff3dfbb8dc3>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    \\\\Questão 11\u001b[0m\n\u001b[0m     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected character after line continuation character\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 12\n",
        "package main\n",
        "\n",
        "import (\n",
        "\t\"fmt\"\n",
        "\t\"sort\"\n",
        ")\n",
        "\n",
        "func main() {\n",
        "\tvar N int\n",
        "\tfmt.Scanln(&N)\n",
        "  if N > 1000 || N < 1 {\n",
        "       fmt.Println(\"Número Inválido. Digite outro número\")\n",
        "       fmt.Scan(&N)\n",
        "    }\n",
        "\n",
        "\tlista := make([]int, N)\n",
        "\n",
        "\tfor i := 0; i < N; i++ {\n",
        "\t\tfmt.Scanln(&lista[i])\n",
        "\t}\n",
        "\n",
        "\tsort.Ints(lista)\n",
        "\tfor _, ord := range lista {\n",
        "\t\tfmt.Println(ord)\n",
        "\t}\n",
        "\tfmt.Println()\n",
        "}"
      ],
      "metadata": {
        "id": "s56LcJk6ixrJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 13\n"
      ],
      "metadata": {
        "id": "mP6VjkpUk_Rk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 14\n",
        "package main\n",
        "\n",
        "import\n",
        "\t\"fmt\"\n",
        "\n",
        "\n",
        "func main() {\n",
        "\tvar N int\n",
        "\tvar mediana float32\n",
        "\tfmt.Scanln(&N)\n",
        "\n",
        "num := make ([]int,N)\n",
        "    for i := 0; i <= N; i++ {\n",
        "        fmt.Scanln(num[i])\n",
        "        if N % 2 =! 0 {\n",
        "            mediana = i/2\n",
        "        } if else N % 2 == 0{\n",
        "            mediana = (i/2+(i/2+1)\n",
        "        }\n",
        "    }\n",
        "    fmt.Println(\"\", mediana)\n",
        "}\n"
      ],
      "metadata": {
        "id": "pVUb6sX8mUgb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 15"
      ],
      "metadata": {
        "id": "LJwFpg3aoIEr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\\\\Questão 16"
      ],
      "metadata": {
        "id": "_QUsYyIWoJ8e"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}